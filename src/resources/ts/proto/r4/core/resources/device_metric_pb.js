// source: proto/r4/core/resources/device_metric.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var proto_annotations_pb = require('../../../../proto/annotations_pb.js');
goog.object.extend(proto, proto_annotations_pb);
var proto_r4_core_codes_pb = require('../../../../proto/r4/core/codes_pb.js');
goog.object.extend(proto, proto_r4_core_codes_pb);
var proto_r4_core_datatypes_pb = require('../../../../proto/r4/core/datatypes_pb.js');
goog.object.extend(proto, proto_r4_core_datatypes_pb);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric.Calibration', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric.CategoryCode', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric.ColorCode', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.displayName = 'proto.google.fhir.r4.core.DeviceMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.displayName = 'proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.ColorCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric.ColorCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.ColorCode.displayName = 'proto.google.fhir.r4.core.DeviceMetric.ColorCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.CategoryCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric.CategoryCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.CategoryCode.displayName = 'proto.google.fhir.r4.core.DeviceMetric.CategoryCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.Calibration.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric.Calibration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.Calibration.displayName = 'proto.google.fhir.r4.core.DeviceMetric.Calibration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.displayName = 'proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.displayName = 'proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.repeatedFields_ = [6,8,9,10,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.Id.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto_r4_core_datatypes_pb.Meta.toObject(includeInstance, f),
    implicitRules: (f = msg.getImplicitRules()) && proto_r4_core_datatypes_pb.Uri.toObject(includeInstance, f),
    language: (f = msg.getLanguage()) && proto_r4_core_datatypes_pb.Code.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto_r4_core_datatypes_pb.Narrative.toObject(includeInstance, f),
    containedList: jspb.Message.toObjectList(msg.getContainedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    identifierList: jspb.Message.toObjectList(msg.getIdentifierList(),
    proto_r4_core_datatypes_pb.Identifier.toObject, includeInstance),
    type: (f = msg.getType()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    unit: (f = msg.getUnit()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    source: (f = msg.getSource()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    parent: (f = msg.getParent()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    operationalStatus: (f = msg.getOperationalStatus()) && proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.toObject(includeInstance, f),
    color: (f = msg.getColor()) && proto.google.fhir.r4.core.DeviceMetric.ColorCode.toObject(includeInstance, f),
    category: (f = msg.getCategory()) && proto.google.fhir.r4.core.DeviceMetric.CategoryCode.toObject(includeInstance, f),
    measurementPeriod: (f = msg.getMeasurementPeriod()) && proto_r4_core_datatypes_pb.Timing.toObject(includeInstance, f),
    calibrationList: jspb.Message.toObjectList(msg.getCalibrationList(),
    proto.google.fhir.r4.core.DeviceMetric.Calibration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric}
 */
proto.google.fhir.r4.core.DeviceMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric;
  return proto.google.fhir.r4.core.DeviceMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric}
 */
proto.google.fhir.r4.core.DeviceMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.Id;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Meta;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Uri;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Uri.deserializeBinaryFromReader);
      msg.setImplicitRules(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Code;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Code.deserializeBinaryFromReader);
      msg.setLanguage(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.Narrative;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Narrative.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 6:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addContained(value);
      break;
    case 8:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 9:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 10:
      var value = new proto_r4_core_datatypes_pb.Identifier;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Identifier.deserializeBinaryFromReader);
      msg.addIdentifier(value);
      break;
    case 11:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 12:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setUnit(value);
      break;
    case 13:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 14:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setParent(value);
      break;
    case 15:
      var value = new proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode;
      reader.readMessage(value,proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.deserializeBinaryFromReader);
      msg.setOperationalStatus(value);
      break;
    case 16:
      var value = new proto.google.fhir.r4.core.DeviceMetric.ColorCode;
      reader.readMessage(value,proto.google.fhir.r4.core.DeviceMetric.ColorCode.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 17:
      var value = new proto.google.fhir.r4.core.DeviceMetric.CategoryCode;
      reader.readMessage(value,proto.google.fhir.r4.core.DeviceMetric.CategoryCode.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 18:
      var value = new proto_r4_core_datatypes_pb.Timing;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Timing.deserializeBinaryFromReader);
      msg.setMeasurementPeriod(value);
      break;
    case 19:
      var value = new proto.google.fhir.r4.core.DeviceMetric.Calibration;
      reader.readMessage(value,proto.google.fhir.r4.core.DeviceMetric.Calibration.deserializeBinaryFromReader);
      msg.addCalibration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getImplicitRules();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Uri.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Code.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.Narrative.serializeBinaryToWriter
    );
  }
  f = message.getContainedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getIdentifierList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto_r4_core_datatypes_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getUnit();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getParent();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getOperationalStatus();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.serializeBinaryToWriter
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.google.fhir.r4.core.DeviceMetric.ColorCode.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.google.fhir.r4.core.DeviceMetric.CategoryCode.serializeBinaryToWriter
    );
  }
  f = message.getMeasurementPeriod();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto_r4_core_datatypes_pb.Timing.serializeBinaryToWriter
    );
  }
  f = message.getCalibrationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.google.fhir.r4.core.DeviceMetric.Calibration.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode;
  return proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional DeviceMetricOperationalStatusCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.ColorCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric.ColorCode;
  return proto.google.fhir.r4.core.DeviceMetric.ColorCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.DeviceMetricColorCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.ColorCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional DeviceMetricColorCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.DeviceMetricColorCode.Value}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.DeviceMetricColorCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.DeviceMetricColorCode.Value} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.ColorCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.ColorCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.CategoryCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric.CategoryCode;
  return proto.google.fhir.r4.core.DeviceMetric.CategoryCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.DeviceMetricCategoryCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.CategoryCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional DeviceMetricCategoryCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.DeviceMetricCategoryCode.Value}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.DeviceMetricCategoryCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.DeviceMetricCategoryCode.Value} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.CategoryCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.CategoryCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.Calibration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    type: (f = msg.getType()) && proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.toObject(includeInstance, f),
    time: (f = msg.getTime()) && proto_r4_core_datatypes_pb.Instant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric.Calibration;
  return proto.google.fhir.r4.core.DeviceMetric.Calibration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode;
      reader.readMessage(value,proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 5:
      var value = new proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode;
      reader.readMessage(value,proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 6:
      var value = new proto_r4_core_datatypes_pb.Instant;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Instant.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.Calibration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_r4_core_datatypes_pb.Instant.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode;
  return proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional DeviceMetricCalibrationTypeCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode;
  return proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional DeviceMetricCalibrationStateCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * optional TypeCode type = 4;
 * @return {?proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.getType = function() {
  return /** @type{?proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.DeviceMetric.Calibration.TypeCode|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.hasType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StateCode state = 5;
 * @return {?proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.getState = function() {
  return /** @type{?proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.DeviceMetric.Calibration.StateCode|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.hasState = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Instant time = 6;
 * @return {?proto.google.fhir.r4.core.Instant}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.getTime = function() {
  return /** @type{?proto.google.fhir.r4.core.Instant} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Instant, 6));
};


/**
 * @param {?proto.google.fhir.r4.core.Instant|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.Calibration.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Id id = 1;
 * @return {?proto.google.fhir.r4.core.Id}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.Id} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Id, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.Id|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Meta meta = 2;
 * @return {?proto.google.fhir.r4.core.Meta}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getMeta = function() {
  return /** @type{?proto.google.fhir.r4.core.Meta} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Meta, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.Meta|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Uri implicit_rules = 3;
 * @return {?proto.google.fhir.r4.core.Uri}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getImplicitRules = function() {
  return /** @type{?proto.google.fhir.r4.core.Uri} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Uri, 3));
};


/**
 * @param {?proto.google.fhir.r4.core.Uri|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setImplicitRules = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearImplicitRules = function() {
  return this.setImplicitRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasImplicitRules = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Code language = 4;
 * @return {?proto.google.fhir.r4.core.Code}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getLanguage = function() {
  return /** @type{?proto.google.fhir.r4.core.Code} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Code, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.Code|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setLanguage = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearLanguage = function() {
  return this.setLanguage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasLanguage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Narrative text = 5;
 * @return {?proto.google.fhir.r4.core.Narrative}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getText = function() {
  return /** @type{?proto.google.fhir.r4.core.Narrative} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Narrative, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.Narrative|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated google.protobuf.Any contained = 6;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getContainedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setContainedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.addContained = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearContainedList = function() {
  return this.setContainedList([]);
};


/**
 * repeated Extension extension = 8;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 8));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 9;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 9));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * repeated Identifier identifier = 10;
 * @return {!Array<!proto.google.fhir.r4.core.Identifier>}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getIdentifierList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Identifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Identifier, 10));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Identifier>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setIdentifierList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Identifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Identifier}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.addIdentifier = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.google.fhir.r4.core.Identifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearIdentifierList = function() {
  return this.setIdentifierList([]);
};


/**
 * optional CodeableConcept type = 11;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getType = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 11));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasType = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional CodeableConcept unit = 12;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getUnit = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 12));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setUnit = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearUnit = function() {
  return this.setUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasUnit = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Reference source = 13;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getSource = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 13));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasSource = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Reference parent = 14;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getParent = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 14));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setParent = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearParent = function() {
  return this.setParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasParent = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional OperationalStatusCode operational_status = 15;
 * @return {?proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getOperationalStatus = function() {
  return /** @type{?proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode, 15));
};


/**
 * @param {?proto.google.fhir.r4.core.DeviceMetric.OperationalStatusCode|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setOperationalStatus = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearOperationalStatus = function() {
  return this.setOperationalStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasOperationalStatus = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ColorCode color = 16;
 * @return {?proto.google.fhir.r4.core.DeviceMetric.ColorCode}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getColor = function() {
  return /** @type{?proto.google.fhir.r4.core.DeviceMetric.ColorCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.DeviceMetric.ColorCode, 16));
};


/**
 * @param {?proto.google.fhir.r4.core.DeviceMetric.ColorCode|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasColor = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional CategoryCode category = 17;
 * @return {?proto.google.fhir.r4.core.DeviceMetric.CategoryCode}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getCategory = function() {
  return /** @type{?proto.google.fhir.r4.core.DeviceMetric.CategoryCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.DeviceMetric.CategoryCode, 17));
};


/**
 * @param {?proto.google.fhir.r4.core.DeviceMetric.CategoryCode|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Timing measurement_period = 18;
 * @return {?proto.google.fhir.r4.core.Timing}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getMeasurementPeriod = function() {
  return /** @type{?proto.google.fhir.r4.core.Timing} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Timing, 18));
};


/**
 * @param {?proto.google.fhir.r4.core.Timing|undefined} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setMeasurementPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearMeasurementPeriod = function() {
  return this.setMeasurementPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.hasMeasurementPeriod = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated Calibration calibration = 19;
 * @return {!Array<!proto.google.fhir.r4.core.DeviceMetric.Calibration>}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.getCalibrationList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.DeviceMetric.Calibration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.DeviceMetric.Calibration, 19));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.DeviceMetric.Calibration>} value
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
*/
proto.google.fhir.r4.core.DeviceMetric.prototype.setCalibrationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.google.fhir.r4.core.DeviceMetric.Calibration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.DeviceMetric.Calibration}
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.addCalibration = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.google.fhir.r4.core.DeviceMetric.Calibration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.DeviceMetric} returns this
 */
proto.google.fhir.r4.core.DeviceMetric.prototype.clearCalibrationList = function() {
  return this.setCalibrationList([]);
};


goog.object.extend(exports, proto.google.fhir.r4.core);
