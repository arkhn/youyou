// source: proto/r4/core/resources/clinical_impression.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var proto_annotations_pb = require('../../../../proto/annotations_pb.js');
goog.object.extend(proto, proto_annotations_pb);
var proto_r4_core_datatypes_pb = require('../../../../proto/r4/core/datatypes_pb.js');
goog.object.extend(proto, proto_r4_core_datatypes_pb);
var proto_r4_core_valuesets_pb = require('../../../../proto/r4/core/valuesets_pb.js');
goog.object.extend(proto, proto_r4_core_valuesets_pb);
goog.exportSymbol('proto.google.fhir.r4.core.ClinicalImpression', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.ClinicalImpression.EffectiveX', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.ChoiceCase', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.ClinicalImpression.Finding', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.ClinicalImpression.Investigation', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.ClinicalImpression.StatusCode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.ClinicalImpression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.ClinicalImpression.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.ClinicalImpression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.ClinicalImpression.displayName = 'proto.google.fhir.r4.core.ClinicalImpression';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.ClinicalImpression.StatusCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.ClinicalImpression.StatusCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.ClinicalImpression.StatusCode.displayName = 'proto.google.fhir.r4.core.ClinicalImpression.StatusCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.oneofGroups_);
};
goog.inherits(proto.google.fhir.r4.core.ClinicalImpression.EffectiveX, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.displayName = 'proto.google.fhir.r4.core.ClinicalImpression.EffectiveX';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.ClinicalImpression.Investigation.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.ClinicalImpression.Investigation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.ClinicalImpression.Investigation.displayName = 'proto.google.fhir.r4.core.ClinicalImpression.Investigation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.ClinicalImpression.Finding.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.ClinicalImpression.Finding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.ClinicalImpression.Finding.displayName = 'proto.google.fhir.r4.core.ClinicalImpression.Finding';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.ClinicalImpression.repeatedFields_ = [6,8,9,10,21,22,23,25,26,27,28,29];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.ClinicalImpression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.ClinicalImpression} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.Id.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto_r4_core_datatypes_pb.Meta.toObject(includeInstance, f),
    implicitRules: (f = msg.getImplicitRules()) && proto_r4_core_datatypes_pb.Uri.toObject(includeInstance, f),
    language: (f = msg.getLanguage()) && proto_r4_core_datatypes_pb.Code.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto_r4_core_datatypes_pb.Narrative.toObject(includeInstance, f),
    containedList: jspb.Message.toObjectList(msg.getContainedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    identifierList: jspb.Message.toObjectList(msg.getIdentifierList(),
    proto_r4_core_datatypes_pb.Identifier.toObject, includeInstance),
    status: (f = msg.getStatus()) && proto.google.fhir.r4.core.ClinicalImpression.StatusCode.toObject(includeInstance, f),
    statusReason: (f = msg.getStatusReason()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    code: (f = msg.getCode()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    subject: (f = msg.getSubject()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    encounter: (f = msg.getEncounter()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    effective: (f = msg.getEffective()) && proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.toObject(includeInstance, f),
    date: (f = msg.getDate()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    assessor: (f = msg.getAssessor()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    previous: (f = msg.getPrevious()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    problemList: jspb.Message.toObjectList(msg.getProblemList(),
    proto_r4_core_datatypes_pb.Reference.toObject, includeInstance),
    investigationList: jspb.Message.toObjectList(msg.getInvestigationList(),
    proto.google.fhir.r4.core.ClinicalImpression.Investigation.toObject, includeInstance),
    protocolList: jspb.Message.toObjectList(msg.getProtocolList(),
    proto_r4_core_datatypes_pb.Uri.toObject, includeInstance),
    summary: (f = msg.getSummary()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    findingList: jspb.Message.toObjectList(msg.getFindingList(),
    proto.google.fhir.r4.core.ClinicalImpression.Finding.toObject, includeInstance),
    prognosisCodeableConceptList: jspb.Message.toObjectList(msg.getPrognosisCodeableConceptList(),
    proto_r4_core_datatypes_pb.CodeableConcept.toObject, includeInstance),
    prognosisReferenceList: jspb.Message.toObjectList(msg.getPrognosisReferenceList(),
    proto_r4_core_datatypes_pb.Reference.toObject, includeInstance),
    supportingInfoList: jspb.Message.toObjectList(msg.getSupportingInfoList(),
    proto_r4_core_datatypes_pb.Reference.toObject, includeInstance),
    noteList: jspb.Message.toObjectList(msg.getNoteList(),
    proto_r4_core_datatypes_pb.Annotation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression}
 */
proto.google.fhir.r4.core.ClinicalImpression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.ClinicalImpression;
  return proto.google.fhir.r4.core.ClinicalImpression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression}
 */
proto.google.fhir.r4.core.ClinicalImpression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.Id;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Meta;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Uri;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Uri.deserializeBinaryFromReader);
      msg.setImplicitRules(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Code;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Code.deserializeBinaryFromReader);
      msg.setLanguage(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.Narrative;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Narrative.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 6:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addContained(value);
      break;
    case 8:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 9:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 10:
      var value = new proto_r4_core_datatypes_pb.Identifier;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Identifier.deserializeBinaryFromReader);
      msg.addIdentifier(value);
      break;
    case 11:
      var value = new proto.google.fhir.r4.core.ClinicalImpression.StatusCode;
      reader.readMessage(value,proto.google.fhir.r4.core.ClinicalImpression.StatusCode.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 12:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setStatusReason(value);
      break;
    case 13:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    case 14:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 15:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 16:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setEncounter(value);
      break;
    case 17:
      var value = new proto.google.fhir.r4.core.ClinicalImpression.EffectiveX;
      reader.readMessage(value,proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.deserializeBinaryFromReader);
      msg.setEffective(value);
      break;
    case 18:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 19:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setAssessor(value);
      break;
    case 20:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setPrevious(value);
      break;
    case 21:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.addProblem(value);
      break;
    case 22:
      var value = new proto.google.fhir.r4.core.ClinicalImpression.Investigation;
      reader.readMessage(value,proto.google.fhir.r4.core.ClinicalImpression.Investigation.deserializeBinaryFromReader);
      msg.addInvestigation(value);
      break;
    case 23:
      var value = new proto_r4_core_datatypes_pb.Uri;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Uri.deserializeBinaryFromReader);
      msg.addProtocol(value);
      break;
    case 24:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 25:
      var value = new proto.google.fhir.r4.core.ClinicalImpression.Finding;
      reader.readMessage(value,proto.google.fhir.r4.core.ClinicalImpression.Finding.deserializeBinaryFromReader);
      msg.addFinding(value);
      break;
    case 26:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.addPrognosisCodeableConcept(value);
      break;
    case 27:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.addPrognosisReference(value);
      break;
    case 28:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.addSupportingInfo(value);
      break;
    case 29:
      var value = new proto_r4_core_datatypes_pb.Annotation;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Annotation.deserializeBinaryFromReader);
      msg.addNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.ClinicalImpression.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getImplicitRules();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Uri.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Code.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.Narrative.serializeBinaryToWriter
    );
  }
  f = message.getContainedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getIdentifierList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto_r4_core_datatypes_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.fhir.r4.core.ClinicalImpression.StatusCode.serializeBinaryToWriter
    );
  }
  f = message.getStatusReason();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getEncounter();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getEffective();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.serializeBinaryToWriter
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getAssessor();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getPrevious();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getProblemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getInvestigationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.google.fhir.r4.core.ClinicalImpression.Investigation.serializeBinaryToWriter
    );
  }
  f = message.getProtocolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      23,
      f,
      proto_r4_core_datatypes_pb.Uri.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFindingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      25,
      f,
      proto.google.fhir.r4.core.ClinicalImpression.Finding.serializeBinaryToWriter
    );
  }
  f = message.getPrognosisCodeableConceptList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      26,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getPrognosisReferenceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      27,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getSupportingInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      28,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getNoteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      29,
      f,
      proto_r4_core_datatypes_pb.Annotation.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.ClinicalImpression.StatusCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.ClinicalImpression.StatusCode;
  return proto.google.fhir.r4.core.ClinicalImpression.StatusCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.ClinicalImpressionStatusValueSet.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.ClinicalImpression.StatusCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClinicalImpressionStatusValueSet.Value value = 1;
 * @return {!proto.google.fhir.r4.core.ClinicalImpressionStatusValueSet.Value}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.ClinicalImpressionStatusValueSet.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.ClinicalImpressionStatusValueSet.Value} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.StatusCode} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.StatusCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.ChoiceCase = {
  CHOICE_NOT_SET: 0,
  DATE_TIME: 1,
  PERIOD: 2
};

/**
 * @return {proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.ChoiceCase}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.getChoiceCase = function() {
  return /** @type {proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.ChoiceCase} */(jspb.Message.computeOneofCase(this, proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.toObject = function(includeInstance, msg) {
  var f, obj = {
    dateTime: (f = msg.getDateTime()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    period: (f = msg.getPeriod()) && proto_r4_core_datatypes_pb.Period.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.ClinicalImpression.EffectiveX;
  return proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setDateTime(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Period;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Period.deserializeBinaryFromReader);
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDateTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getPeriod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Period.serializeBinaryToWriter
    );
  }
};


/**
 * optional DateTime date_time = 1;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.getDateTime = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.setDateTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.clearDateTime = function() {
  return this.setDateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.hasDateTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Period period = 2;
 * @return {?proto.google.fhir.r4.core.Period}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.getPeriod = function() {
  return /** @type{?proto.google.fhir.r4.core.Period} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Period, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.Period|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.setPeriod = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.clearPeriod = function() {
  return this.setPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.EffectiveX.prototype.hasPeriod = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.repeatedFields_ = [2,3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.ClinicalImpression.Investigation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    code: (f = msg.getCode()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto_r4_core_datatypes_pb.Reference.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.ClinicalImpression.Investigation;
  return proto.google.fhir.r4.core.ClinicalImpression.Investigation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.ClinicalImpression.Investigation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * optional CodeableConcept code = 4;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.getCode = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.setCode = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.clearCode = function() {
  return this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.hasCode = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Reference item = 5;
 * @return {!Array<!proto.google.fhir.r4.core.Reference>}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.getItemList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Reference, 5));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Reference>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.setItemList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.fhir.r4.core.Reference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Investigation.prototype.clearItemList = function() {
  return this.setItemList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.ClinicalImpression.Finding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Finding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    itemCodeableConcept: (f = msg.getItemCodeableConcept()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    itemReference: (f = msg.getItemReference()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    basis: (f = msg.getBasis()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.ClinicalImpression.Finding;
  return proto.google.fhir.r4.core.ClinicalImpression.Finding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Finding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setItemCodeableConcept(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setItemReference(value);
      break;
    case 6:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setBasis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.ClinicalImpression.Finding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Finding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getItemCodeableConcept();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getItemReference();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getBasis();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * optional CodeableConcept item_codeable_concept = 4;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.getItemCodeableConcept = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.setItemCodeableConcept = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.clearItemCodeableConcept = function() {
  return this.setItemCodeableConcept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.hasItemCodeableConcept = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Reference item_reference = 5;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.getItemReference = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.setItemReference = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.clearItemReference = function() {
  return this.setItemReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.hasItemReference = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional String basis = 6;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.getBasis = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 6));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.setBasis = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.clearBasis = function() {
  return this.setBasis(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.Finding.prototype.hasBasis = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Id id = 1;
 * @return {?proto.google.fhir.r4.core.Id}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.Id} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Id, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.Id|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Meta meta = 2;
 * @return {?proto.google.fhir.r4.core.Meta}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getMeta = function() {
  return /** @type{?proto.google.fhir.r4.core.Meta} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Meta, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.Meta|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Uri implicit_rules = 3;
 * @return {?proto.google.fhir.r4.core.Uri}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getImplicitRules = function() {
  return /** @type{?proto.google.fhir.r4.core.Uri} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Uri, 3));
};


/**
 * @param {?proto.google.fhir.r4.core.Uri|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setImplicitRules = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearImplicitRules = function() {
  return this.setImplicitRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasImplicitRules = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Code language = 4;
 * @return {?proto.google.fhir.r4.core.Code}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getLanguage = function() {
  return /** @type{?proto.google.fhir.r4.core.Code} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Code, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.Code|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setLanguage = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearLanguage = function() {
  return this.setLanguage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasLanguage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Narrative text = 5;
 * @return {?proto.google.fhir.r4.core.Narrative}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getText = function() {
  return /** @type{?proto.google.fhir.r4.core.Narrative} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Narrative, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.Narrative|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated google.protobuf.Any contained = 6;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getContainedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setContainedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addContained = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearContainedList = function() {
  return this.setContainedList([]);
};


/**
 * repeated Extension extension = 8;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 8));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 9;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 9));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * repeated Identifier identifier = 10;
 * @return {!Array<!proto.google.fhir.r4.core.Identifier>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getIdentifierList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Identifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Identifier, 10));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Identifier>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setIdentifierList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Identifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Identifier}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addIdentifier = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.google.fhir.r4.core.Identifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearIdentifierList = function() {
  return this.setIdentifierList([]);
};


/**
 * optional StatusCode status = 11;
 * @return {?proto.google.fhir.r4.core.ClinicalImpression.StatusCode}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getStatus = function() {
  return /** @type{?proto.google.fhir.r4.core.ClinicalImpression.StatusCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.ClinicalImpression.StatusCode, 11));
};


/**
 * @param {?proto.google.fhir.r4.core.ClinicalImpression.StatusCode|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional CodeableConcept status_reason = 12;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getStatusReason = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 12));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setStatusReason = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearStatusReason = function() {
  return this.setStatusReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasStatusReason = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional CodeableConcept code = 13;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getCode = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 13));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setCode = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearCode = function() {
  return this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasCode = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional String description = 14;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getDescription = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 14));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setDescription = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearDescription = function() {
  return this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Reference subject = 15;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getSubject = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 15));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Reference encounter = 16;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getEncounter = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 16));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setEncounter = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearEncounter = function() {
  return this.setEncounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasEncounter = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional EffectiveX effective = 17;
 * @return {?proto.google.fhir.r4.core.ClinicalImpression.EffectiveX}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getEffective = function() {
  return /** @type{?proto.google.fhir.r4.core.ClinicalImpression.EffectiveX} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.ClinicalImpression.EffectiveX, 17));
};


/**
 * @param {?proto.google.fhir.r4.core.ClinicalImpression.EffectiveX|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setEffective = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearEffective = function() {
  return this.setEffective(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasEffective = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional DateTime date = 18;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getDate = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 18));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasDate = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Reference assessor = 19;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getAssessor = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 19));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setAssessor = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearAssessor = function() {
  return this.setAssessor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasAssessor = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Reference previous = 20;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getPrevious = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 20));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setPrevious = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearPrevious = function() {
  return this.setPrevious(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasPrevious = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * repeated Reference problem = 21;
 * @return {!Array<!proto.google.fhir.r4.core.Reference>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getProblemList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Reference, 21));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Reference>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setProblemList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addProblem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.google.fhir.r4.core.Reference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearProblemList = function() {
  return this.setProblemList([]);
};


/**
 * repeated Investigation investigation = 22;
 * @return {!Array<!proto.google.fhir.r4.core.ClinicalImpression.Investigation>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getInvestigationList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.ClinicalImpression.Investigation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.ClinicalImpression.Investigation, 22));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.ClinicalImpression.Investigation>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setInvestigationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Investigation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Investigation}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addInvestigation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.google.fhir.r4.core.ClinicalImpression.Investigation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearInvestigationList = function() {
  return this.setInvestigationList([]);
};


/**
 * repeated Uri protocol = 23;
 * @return {!Array<!proto.google.fhir.r4.core.Uri>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getProtocolList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Uri>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Uri, 23));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Uri>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setProtocolList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 23, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Uri=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Uri}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addProtocol = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.google.fhir.r4.core.Uri, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearProtocolList = function() {
  return this.setProtocolList([]);
};


/**
 * optional String summary = 24;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getSummary = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 24));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * repeated Finding finding = 25;
 * @return {!Array<!proto.google.fhir.r4.core.ClinicalImpression.Finding>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getFindingList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.ClinicalImpression.Finding>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.ClinicalImpression.Finding, 25));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.ClinicalImpression.Finding>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setFindingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 25, value);
};


/**
 * @param {!proto.google.fhir.r4.core.ClinicalImpression.Finding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.ClinicalImpression.Finding}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addFinding = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 25, opt_value, proto.google.fhir.r4.core.ClinicalImpression.Finding, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearFindingList = function() {
  return this.setFindingList([]);
};


/**
 * repeated CodeableConcept prognosis_codeable_concept = 26;
 * @return {!Array<!proto.google.fhir.r4.core.CodeableConcept>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getPrognosisCodeableConceptList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.CodeableConcept>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 26));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.CodeableConcept>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setPrognosisCodeableConceptList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 26, value);
};


/**
 * @param {!proto.google.fhir.r4.core.CodeableConcept=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addPrognosisCodeableConcept = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, proto.google.fhir.r4.core.CodeableConcept, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearPrognosisCodeableConceptList = function() {
  return this.setPrognosisCodeableConceptList([]);
};


/**
 * repeated Reference prognosis_reference = 27;
 * @return {!Array<!proto.google.fhir.r4.core.Reference>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getPrognosisReferenceList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Reference, 27));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Reference>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setPrognosisReferenceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 27, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addPrognosisReference = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 27, opt_value, proto.google.fhir.r4.core.Reference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearPrognosisReferenceList = function() {
  return this.setPrognosisReferenceList([]);
};


/**
 * repeated Reference supporting_info = 28;
 * @return {!Array<!proto.google.fhir.r4.core.Reference>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getSupportingInfoList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Reference, 28));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Reference>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setSupportingInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 28, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addSupportingInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 28, opt_value, proto.google.fhir.r4.core.Reference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearSupportingInfoList = function() {
  return this.setSupportingInfoList([]);
};


/**
 * repeated Annotation note = 29;
 * @return {!Array<!proto.google.fhir.r4.core.Annotation>}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.getNoteList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Annotation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Annotation, 29));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Annotation>} value
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
*/
proto.google.fhir.r4.core.ClinicalImpression.prototype.setNoteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 29, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Annotation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Annotation}
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.addNote = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 29, opt_value, proto.google.fhir.r4.core.Annotation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.ClinicalImpression} returns this
 */
proto.google.fhir.r4.core.ClinicalImpression.prototype.clearNoteList = function() {
  return this.setNoteList([]);
};


goog.object.extend(exports, proto.google.fhir.r4.core);
