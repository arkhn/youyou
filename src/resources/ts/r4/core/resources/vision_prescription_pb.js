// source: proto/r4/core/resources/vision_prescription.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var proto_annotations_pb = require('../../../../proto/annotations_pb.js');
goog.object.extend(proto, proto_annotations_pb);
var proto_r4_core_codes_pb = require('../../../../proto/r4/core/codes_pb.js');
goog.object.extend(proto, proto_r4_core_codes_pb);
var proto_r4_core_datatypes_pb = require('../../../../proto/r4/core/datatypes_pb.js');
goog.object.extend(proto, proto_r4_core_datatypes_pb);
goog.exportSymbol('proto.google.fhir.r4.core.VisionPrescription', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.VisionPrescription.LensSpecification', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.VisionPrescription.StatusCode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.VisionPrescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.VisionPrescription.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.VisionPrescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.VisionPrescription.displayName = 'proto.google.fhir.r4.core.VisionPrescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.VisionPrescription.StatusCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.VisionPrescription.StatusCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.VisionPrescription.StatusCode.displayName = 'proto.google.fhir.r4.core.VisionPrescription.StatusCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.VisionPrescription.LensSpecification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.displayName = 'proto.google.fhir.r4.core.VisionPrescription.LensSpecification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.displayName = 'proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.displayName = 'proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.displayName = 'proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.VisionPrescription.repeatedFields_ = [6,8,9,10,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.VisionPrescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.VisionPrescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.Id.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto_r4_core_datatypes_pb.Meta.toObject(includeInstance, f),
    implicitRules: (f = msg.getImplicitRules()) && proto_r4_core_datatypes_pb.Uri.toObject(includeInstance, f),
    language: (f = msg.getLanguage()) && proto_r4_core_datatypes_pb.Code.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto_r4_core_datatypes_pb.Narrative.toObject(includeInstance, f),
    containedList: jspb.Message.toObjectList(msg.getContainedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    identifierList: jspb.Message.toObjectList(msg.getIdentifierList(),
    proto_r4_core_datatypes_pb.Identifier.toObject, includeInstance),
    status: (f = msg.getStatus()) && proto.google.fhir.r4.core.VisionPrescription.StatusCode.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    patient: (f = msg.getPatient()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    encounter: (f = msg.getEncounter()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    dateWritten: (f = msg.getDateWritten()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    prescriber: (f = msg.getPrescriber()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    lensSpecificationList: jspb.Message.toObjectList(msg.getLensSpecificationList(),
    proto.google.fhir.r4.core.VisionPrescription.LensSpecification.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.VisionPrescription}
 */
proto.google.fhir.r4.core.VisionPrescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.VisionPrescription;
  return proto.google.fhir.r4.core.VisionPrescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.VisionPrescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.VisionPrescription}
 */
proto.google.fhir.r4.core.VisionPrescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.Id;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Meta;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Uri;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Uri.deserializeBinaryFromReader);
      msg.setImplicitRules(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Code;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Code.deserializeBinaryFromReader);
      msg.setLanguage(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.Narrative;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Narrative.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 6:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addContained(value);
      break;
    case 8:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 9:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 10:
      var value = new proto_r4_core_datatypes_pb.Identifier;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Identifier.deserializeBinaryFromReader);
      msg.addIdentifier(value);
      break;
    case 11:
      var value = new proto.google.fhir.r4.core.VisionPrescription.StatusCode;
      reader.readMessage(value,proto.google.fhir.r4.core.VisionPrescription.StatusCode.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 12:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 13:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setPatient(value);
      break;
    case 14:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setEncounter(value);
      break;
    case 15:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setDateWritten(value);
      break;
    case 16:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setPrescriber(value);
      break;
    case 17:
      var value = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification;
      reader.readMessage(value,proto.google.fhir.r4.core.VisionPrescription.LensSpecification.deserializeBinaryFromReader);
      msg.addLensSpecification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.VisionPrescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.VisionPrescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getImplicitRules();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Uri.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Code.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.Narrative.serializeBinaryToWriter
    );
  }
  f = message.getContainedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getIdentifierList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto_r4_core_datatypes_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.google.fhir.r4.core.VisionPrescription.StatusCode.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getPatient();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getEncounter();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getDateWritten();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getPrescriber();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getLensSpecificationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.google.fhir.r4.core.VisionPrescription.LensSpecification.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.VisionPrescription.StatusCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.VisionPrescription.StatusCode;
  return proto.google.fhir.r4.core.VisionPrescription.StatusCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.FinancialResourceStatusCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.VisionPrescription.StatusCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional FinancialResourceStatusCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.FinancialResourceStatusCode.Value}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.FinancialResourceStatusCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.FinancialResourceStatusCode.Value} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.StatusCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.StatusCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.repeatedFields_ = [2,3,9,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    product: (f = msg.getProduct()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    eye: (f = msg.getEye()) && proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.toObject(includeInstance, f),
    sphere: (f = msg.getSphere()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    cylinder: (f = msg.getCylinder()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    axis: (f = msg.getAxis()) && proto_r4_core_datatypes_pb.Integer.toObject(includeInstance, f),
    prismList: jspb.Message.toObjectList(msg.getPrismList(),
    proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.toObject, includeInstance),
    add: (f = msg.getAdd()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    power: (f = msg.getPower()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    backCurve: (f = msg.getBackCurve()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    diameter: (f = msg.getDiameter()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && proto_r4_core_datatypes_pb.SimpleQuantity.toObject(includeInstance, f),
    color: (f = msg.getColor()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    brand: (f = msg.getBrand()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    noteList: jspb.Message.toObjectList(msg.getNoteList(),
    proto_r4_core_datatypes_pb.Annotation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification;
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    case 5:
      var value = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode;
      reader.readMessage(value,proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.deserializeBinaryFromReader);
      msg.setEye(value);
      break;
    case 6:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setSphere(value);
      break;
    case 7:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setCylinder(value);
      break;
    case 8:
      var value = new proto_r4_core_datatypes_pb.Integer;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Integer.deserializeBinaryFromReader);
      msg.setAxis(value);
      break;
    case 9:
      var value = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism;
      reader.readMessage(value,proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.deserializeBinaryFromReader);
      msg.addPrism(value);
      break;
    case 10:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setAdd(value);
      break;
    case 11:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setPower(value);
      break;
    case 12:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setBackCurve(value);
      break;
    case 13:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setDiameter(value);
      break;
    case 14:
      var value = new proto_r4_core_datatypes_pb.SimpleQuantity;
      reader.readMessage(value,proto_r4_core_datatypes_pb.SimpleQuantity.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 15:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 16:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setBrand(value);
      break;
    case 17:
      var value = new proto_r4_core_datatypes_pb.Annotation;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Annotation.deserializeBinaryFromReader);
      msg.addNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getEye();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.serializeBinaryToWriter
    );
  }
  f = message.getSphere();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCylinder();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getAxis();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_r4_core_datatypes_pb.Integer.serializeBinaryToWriter
    );
  }
  f = message.getPrismList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.serializeBinaryToWriter
    );
  }
  f = message.getAdd();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPower();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getBackCurve();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDiameter();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_r4_core_datatypes_pb.SimpleQuantity.serializeBinaryToWriter
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBrand();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getNoteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto_r4_core_datatypes_pb.Annotation.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode;
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.VisionEyesCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional VisionEyesCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.VisionEyesCode.Value}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.VisionEyesCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.VisionEyesCode.Value} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    amount: (f = msg.getAmount()) && proto_r4_core_datatypes_pb.Decimal.toObject(includeInstance, f),
    base: (f = msg.getBase()) && proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism;
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Decimal;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 5:
      var value = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode;
      reader.readMessage(value,proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode;
  return proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.fhir.r4.core.VisionBaseCode.Value} */ (reader.readEnum());
      msg.setValue(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
};


/**
 * optional VisionBaseCode.Value value = 1;
 * @return {!proto.google.fhir.r4.core.VisionBaseCode.Value}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.getValue = function() {
  return /** @type {!proto.google.fhir.r4.core.VisionBaseCode.Value} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.fhir.r4.core.VisionBaseCode.Value} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional String id = 2;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Extension extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * optional Decimal amount = 4;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.getAmount = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BaseCode base = 5;
 * @return {?proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.getBase = function() {
  return /** @type{?proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.BaseCode|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism.prototype.hasBase = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * optional CodeableConcept product = 4;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getProduct = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EyeCode eye = 5;
 * @return {?proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getEye = function() {
  return /** @type{?proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.VisionPrescription.LensSpecification.EyeCode|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setEye = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearEye = function() {
  return this.setEye(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasEye = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Decimal sphere = 6;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getSphere = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 6));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setSphere = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearSphere = function() {
  return this.setSphere(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasSphere = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Decimal cylinder = 7;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getCylinder = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 7));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setCylinder = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearCylinder = function() {
  return this.setCylinder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasCylinder = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Integer axis = 8;
 * @return {?proto.google.fhir.r4.core.Integer}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getAxis = function() {
  return /** @type{?proto.google.fhir.r4.core.Integer} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Integer, 8));
};


/**
 * @param {?proto.google.fhir.r4.core.Integer|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setAxis = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearAxis = function() {
  return this.setAxis(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasAxis = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Prism prism = 9;
 * @return {!Array<!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getPrismList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism, 9));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setPrismList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.addPrism = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.fhir.r4.core.VisionPrescription.LensSpecification.Prism, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearPrismList = function() {
  return this.setPrismList([]);
};


/**
 * optional Decimal add = 10;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getAdd = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 10));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setAdd = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearAdd = function() {
  return this.setAdd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasAdd = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Decimal power = 11;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getPower = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 11));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setPower = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearPower = function() {
  return this.setPower(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasPower = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Decimal back_curve = 12;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getBackCurve = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 12));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setBackCurve = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearBackCurve = function() {
  return this.setBackCurve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasBackCurve = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Decimal diameter = 13;
 * @return {?proto.google.fhir.r4.core.Decimal}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getDiameter = function() {
  return /** @type{?proto.google.fhir.r4.core.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Decimal, 13));
};


/**
 * @param {?proto.google.fhir.r4.core.Decimal|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setDiameter = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearDiameter = function() {
  return this.setDiameter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasDiameter = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional SimpleQuantity duration = 14;
 * @return {?proto.google.fhir.r4.core.SimpleQuantity}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getDuration = function() {
  return /** @type{?proto.google.fhir.r4.core.SimpleQuantity} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.SimpleQuantity, 14));
};


/**
 * @param {?proto.google.fhir.r4.core.SimpleQuantity|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional String color = 15;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getColor = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 15));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasColor = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional String brand = 16;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getBrand = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 16));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setBrand = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearBrand = function() {
  return this.setBrand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.hasBrand = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated Annotation note = 17;
 * @return {!Array<!proto.google.fhir.r4.core.Annotation>}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.getNoteList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Annotation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Annotation, 17));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Annotation>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.setNoteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Annotation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Annotation}
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.addNote = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.google.fhir.r4.core.Annotation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.LensSpecification.prototype.clearNoteList = function() {
  return this.setNoteList([]);
};


/**
 * optional Id id = 1;
 * @return {?proto.google.fhir.r4.core.Id}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.Id} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Id, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.Id|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Meta meta = 2;
 * @return {?proto.google.fhir.r4.core.Meta}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getMeta = function() {
  return /** @type{?proto.google.fhir.r4.core.Meta} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Meta, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.Meta|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Uri implicit_rules = 3;
 * @return {?proto.google.fhir.r4.core.Uri}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getImplicitRules = function() {
  return /** @type{?proto.google.fhir.r4.core.Uri} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Uri, 3));
};


/**
 * @param {?proto.google.fhir.r4.core.Uri|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setImplicitRules = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearImplicitRules = function() {
  return this.setImplicitRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasImplicitRules = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Code language = 4;
 * @return {?proto.google.fhir.r4.core.Code}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getLanguage = function() {
  return /** @type{?proto.google.fhir.r4.core.Code} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Code, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.Code|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setLanguage = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearLanguage = function() {
  return this.setLanguage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasLanguage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Narrative text = 5;
 * @return {?proto.google.fhir.r4.core.Narrative}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getText = function() {
  return /** @type{?proto.google.fhir.r4.core.Narrative} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Narrative, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.Narrative|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated google.protobuf.Any contained = 6;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getContainedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setContainedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.addContained = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearContainedList = function() {
  return this.setContainedList([]);
};


/**
 * repeated Extension extension = 8;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 8));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 9;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 9));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * repeated Identifier identifier = 10;
 * @return {!Array<!proto.google.fhir.r4.core.Identifier>}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getIdentifierList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Identifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Identifier, 10));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Identifier>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setIdentifierList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Identifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Identifier}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.addIdentifier = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.google.fhir.r4.core.Identifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearIdentifierList = function() {
  return this.setIdentifierList([]);
};


/**
 * optional StatusCode status = 11;
 * @return {?proto.google.fhir.r4.core.VisionPrescription.StatusCode}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getStatus = function() {
  return /** @type{?proto.google.fhir.r4.core.VisionPrescription.StatusCode} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.VisionPrescription.StatusCode, 11));
};


/**
 * @param {?proto.google.fhir.r4.core.VisionPrescription.StatusCode|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DateTime created = 12;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getCreated = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 12));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Reference patient = 13;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getPatient = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 13));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setPatient = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearPatient = function() {
  return this.setPatient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasPatient = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Reference encounter = 14;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getEncounter = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 14));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setEncounter = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearEncounter = function() {
  return this.setEncounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasEncounter = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional DateTime date_written = 15;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getDateWritten = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 15));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setDateWritten = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearDateWritten = function() {
  return this.setDateWritten(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasDateWritten = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Reference prescriber = 16;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getPrescriber = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 16));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setPrescriber = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearPrescriber = function() {
  return this.setPrescriber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.hasPrescriber = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated LensSpecification lens_specification = 17;
 * @return {!Array<!proto.google.fhir.r4.core.VisionPrescription.LensSpecification>}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.getLensSpecificationList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.VisionPrescription.LensSpecification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.VisionPrescription.LensSpecification, 17));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.VisionPrescription.LensSpecification>} value
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
*/
proto.google.fhir.r4.core.VisionPrescription.prototype.setLensSpecificationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.VisionPrescription.LensSpecification}
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.addLensSpecification = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.google.fhir.r4.core.VisionPrescription.LensSpecification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.VisionPrescription} returns this
 */
proto.google.fhir.r4.core.VisionPrescription.prototype.clearLensSpecificationList = function() {
  return this.setLensSpecificationList([]);
};


goog.object.extend(exports, proto.google.fhir.r4.core);
