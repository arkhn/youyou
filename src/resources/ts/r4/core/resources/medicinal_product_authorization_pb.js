// source: proto/r4/core/resources/medicinal_product_authorization.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var proto_annotations_pb = require('../../../../proto/annotations_pb.js');
goog.object.extend(proto, proto_annotations_pb);
var proto_r4_core_datatypes_pb = require('../../../../proto/r4/core/datatypes_pb.js');
goog.object.extend(proto, proto_r4_core_datatypes_pb);
goog.exportSymbol('proto.google.fhir.r4.core.MedicinalProductAuthorization', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX', null, global);
goog.exportSymbol('proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.ChoiceCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.MedicinalProductAuthorization.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.MedicinalProductAuthorization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.MedicinalProductAuthorization.displayName = 'proto.google.fhir.r4.core.MedicinalProductAuthorization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.displayName = 'proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.repeatedFields_, null);
};
goog.inherits(proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.displayName = 'proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.oneofGroups_);
};
goog.inherits(proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.displayName = 'proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.repeatedFields_ = [6,8,9,10,12,13,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.Id.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto_r4_core_datatypes_pb.Meta.toObject(includeInstance, f),
    implicitRules: (f = msg.getImplicitRules()) && proto_r4_core_datatypes_pb.Uri.toObject(includeInstance, f),
    language: (f = msg.getLanguage()) && proto_r4_core_datatypes_pb.Code.toObject(includeInstance, f),
    text: (f = msg.getText()) && proto_r4_core_datatypes_pb.Narrative.toObject(includeInstance, f),
    containedList: jspb.Message.toObjectList(msg.getContainedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    identifierList: jspb.Message.toObjectList(msg.getIdentifierList(),
    proto_r4_core_datatypes_pb.Identifier.toObject, includeInstance),
    subject: (f = msg.getSubject()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    countryList: jspb.Message.toObjectList(msg.getCountryList(),
    proto_r4_core_datatypes_pb.CodeableConcept.toObject, includeInstance),
    jurisdictionList: jspb.Message.toObjectList(msg.getJurisdictionList(),
    proto_r4_core_datatypes_pb.CodeableConcept.toObject, includeInstance),
    status: (f = msg.getStatus()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    statusDate: (f = msg.getStatusDate()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    restoreDate: (f = msg.getRestoreDate()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    validityPeriod: (f = msg.getValidityPeriod()) && proto_r4_core_datatypes_pb.Period.toObject(includeInstance, f),
    dataExclusivityPeriod: (f = msg.getDataExclusivityPeriod()) && proto_r4_core_datatypes_pb.Period.toObject(includeInstance, f),
    dateOfFirstAuthorization: (f = msg.getDateOfFirstAuthorization()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    internationalBirthDate: (f = msg.getInternationalBirthDate()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f),
    legalBasis: (f = msg.getLegalBasis()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    jurisdictionalAuthorizationList: jspb.Message.toObjectList(msg.getJurisdictionalAuthorizationList(),
    proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.toObject, includeInstance),
    holder: (f = msg.getHolder()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    regulator: (f = msg.getRegulator()) && proto_r4_core_datatypes_pb.Reference.toObject(includeInstance, f),
    procedure: (f = msg.getProcedure()) && proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.MedicinalProductAuthorization;
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.Id;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Id.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Meta;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Uri;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Uri.deserializeBinaryFromReader);
      msg.setImplicitRules(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Code;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Code.deserializeBinaryFromReader);
      msg.setLanguage(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.Narrative;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Narrative.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 6:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addContained(value);
      break;
    case 8:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 9:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 10:
      var value = new proto_r4_core_datatypes_pb.Identifier;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Identifier.deserializeBinaryFromReader);
      msg.addIdentifier(value);
      break;
    case 11:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 12:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.addCountry(value);
      break;
    case 13:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.addJurisdiction(value);
      break;
    case 14:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 15:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setStatusDate(value);
      break;
    case 16:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setRestoreDate(value);
      break;
    case 17:
      var value = new proto_r4_core_datatypes_pb.Period;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Period.deserializeBinaryFromReader);
      msg.setValidityPeriod(value);
      break;
    case 18:
      var value = new proto_r4_core_datatypes_pb.Period;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Period.deserializeBinaryFromReader);
      msg.setDataExclusivityPeriod(value);
      break;
    case 19:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setDateOfFirstAuthorization(value);
      break;
    case 20:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setInternationalBirthDate(value);
      break;
    case 21:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setLegalBasis(value);
      break;
    case 22:
      var value = new proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization;
      reader.readMessage(value,proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.deserializeBinaryFromReader);
      msg.addJurisdictionalAuthorization(value);
      break;
    case 23:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setHolder(value);
      break;
    case 24:
      var value = new proto_r4_core_datatypes_pb.Reference;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Reference.deserializeBinaryFromReader);
      msg.setRegulator(value);
      break;
    case 25:
      var value = new proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure;
      reader.readMessage(value,proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.deserializeBinaryFromReader);
      msg.setProcedure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.MedicinalProductAuthorization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Meta.serializeBinaryToWriter
    );
  }
  f = message.getImplicitRules();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Uri.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Code.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.Narrative.serializeBinaryToWriter
    );
  }
  f = message.getContainedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getIdentifierList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto_r4_core_datatypes_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getJurisdictionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getStatusDate();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getRestoreDate();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getValidityPeriod();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto_r4_core_datatypes_pb.Period.serializeBinaryToWriter
    );
  }
  f = message.getDataExclusivityPeriod();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto_r4_core_datatypes_pb.Period.serializeBinaryToWriter
    );
  }
  f = message.getDateOfFirstAuthorization();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getInternationalBirthDate();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
  f = message.getLegalBasis();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getJurisdictionalAuthorizationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.serializeBinaryToWriter
    );
  }
  f = message.getHolder();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getRegulator();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto_r4_core_datatypes_pb.Reference.serializeBinaryToWriter
    );
  }
  f = message.getProcedure();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.repeatedFields_ = [2,3,4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    identifierList: jspb.Message.toObjectList(msg.getIdentifierList(),
    proto_r4_core_datatypes_pb.Identifier.toObject, includeInstance),
    country: (f = msg.getCountry()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    jurisdictionList: jspb.Message.toObjectList(msg.getJurisdictionList(),
    proto_r4_core_datatypes_pb.CodeableConcept.toObject, includeInstance),
    legalStatusOfSupply: (f = msg.getLegalStatusOfSupply()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    validityPeriod: (f = msg.getValidityPeriod()) && proto_r4_core_datatypes_pb.Period.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization;
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Identifier;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Identifier.deserializeBinaryFromReader);
      msg.addIdentifier(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setCountry(value);
      break;
    case 6:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.addJurisdiction(value);
      break;
    case 7:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setLegalStatusOfSupply(value);
      break;
    case 8:
      var value = new proto_r4_core_datatypes_pb.Period;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Period.deserializeBinaryFromReader);
      msg.setValidityPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getIdentifierList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getJurisdictionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getLegalStatusOfSupply();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getValidityPeriod();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_r4_core_datatypes_pb.Period.serializeBinaryToWriter
    );
  }
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * repeated Identifier identifier = 4;
 * @return {!Array<!proto.google.fhir.r4.core.Identifier>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getIdentifierList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Identifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Identifier, 4));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Identifier>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setIdentifierList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Identifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Identifier}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.addIdentifier = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.fhir.r4.core.Identifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearIdentifierList = function() {
  return this.setIdentifierList([]);
};


/**
 * optional CodeableConcept country = 5;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getCountry = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setCountry = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearCountry = function() {
  return this.setCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated CodeableConcept jurisdiction = 6;
 * @return {!Array<!proto.google.fhir.r4.core.CodeableConcept>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getJurisdictionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.CodeableConcept>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 6));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.CodeableConcept>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setJurisdictionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.fhir.r4.core.CodeableConcept=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.addJurisdiction = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.fhir.r4.core.CodeableConcept, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearJurisdictionList = function() {
  return this.setJurisdictionList([]);
};


/**
 * optional CodeableConcept legal_status_of_supply = 7;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getLegalStatusOfSupply = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 7));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setLegalStatusOfSupply = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearLegalStatusOfSupply = function() {
  return this.setLegalStatusOfSupply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.hasLegalStatusOfSupply = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Period validity_period = 8;
 * @return {?proto.google.fhir.r4.core.Period}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.getValidityPeriod = function() {
  return /** @type{?proto.google.fhir.r4.core.Period} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Period, 8));
};


/**
 * @param {?proto.google.fhir.r4.core.Period|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.setValidityPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.clearValidityPeriod = function() {
  return this.setValidityPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization.prototype.hasValidityPeriod = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.repeatedFields_ = [2,3,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto_r4_core_datatypes_pb.String.toObject(includeInstance, f),
    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    modifierExtensionList: jspb.Message.toObjectList(msg.getModifierExtensionList(),
    proto_r4_core_datatypes_pb.Extension.toObject, includeInstance),
    identifier: (f = msg.getIdentifier()) && proto_r4_core_datatypes_pb.Identifier.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto_r4_core_datatypes_pb.CodeableConcept.toObject(includeInstance, f),
    date: (f = msg.getDate()) && proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.toObject(includeInstance, f),
    applicationList: jspb.Message.toObjectList(msg.getApplicationList(),
    proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure;
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.String;
      reader.readMessage(value,proto_r4_core_datatypes_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto_r4_core_datatypes_pb.Extension;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Extension.deserializeBinaryFromReader);
      msg.addModifierExtension(value);
      break;
    case 4:
      var value = new proto_r4_core_datatypes_pb.Identifier;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Identifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 5:
      var value = new proto_r4_core_datatypes_pb.CodeableConcept;
      reader.readMessage(value,proto_r4_core_datatypes_pb.CodeableConcept.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 6:
      var value = new proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX;
      reader.readMessage(value,proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 7:
      var value = new proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure;
      reader.readMessage(value,proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.deserializeBinaryFromReader);
      msg.addApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getModifierExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_r4_core_datatypes_pb.Extension.serializeBinaryToWriter
    );
  }
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_r4_core_datatypes_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_r4_core_datatypes_pb.CodeableConcept.serializeBinaryToWriter
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.serializeBinaryToWriter
    );
  }
  f = message.getApplicationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.ChoiceCase = {
  CHOICE_NOT_SET: 0,
  PERIOD: 1,
  DATE_TIME: 2
};

/**
 * @return {proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.ChoiceCase}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.getChoiceCase = function() {
  return /** @type {proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.ChoiceCase} */(jspb.Message.computeOneofCase(this, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.toObject = function(opt_includeInstance) {
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: (f = msg.getPeriod()) && proto_r4_core_datatypes_pb.Period.toObject(includeInstance, f),
    dateTime: (f = msg.getDateTime()) && proto_r4_core_datatypes_pb.DateTime.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX;
  return proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_r4_core_datatypes_pb.Period;
      reader.readMessage(value,proto_r4_core_datatypes_pb.Period.deserializeBinaryFromReader);
      msg.setPeriod(value);
      break;
    case 2:
      var value = new proto_r4_core_datatypes_pb.DateTime;
      reader.readMessage(value,proto_r4_core_datatypes_pb.DateTime.deserializeBinaryFromReader);
      msg.setDateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_r4_core_datatypes_pb.Period.serializeBinaryToWriter
    );
  }
  f = message.getDateTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_r4_core_datatypes_pb.DateTime.serializeBinaryToWriter
    );
  }
};


/**
 * optional Period period = 1;
 * @return {?proto.google.fhir.r4.core.Period}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.getPeriod = function() {
  return /** @type{?proto.google.fhir.r4.core.Period} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Period, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.Period|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.setPeriod = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.clearPeriod = function() {
  return this.setPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.hasPeriod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DateTime date_time = 2;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.getDateTime = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.setDateTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.clearDateTime = function() {
  return this.setDateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX.prototype.hasDateTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional String id = 1;
 * @return {?proto.google.fhir.r4.core.String}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.String} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.String, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.String|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Extension extension = 2;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 2));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 3;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 3));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * optional Identifier identifier = 4;
 * @return {?proto.google.fhir.r4.core.Identifier}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getIdentifier = function() {
  return /** @type{?proto.google.fhir.r4.core.Identifier} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Identifier, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.Identifier|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CodeableConcept type = 5;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getType = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.hasType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DateX date = 6;
 * @return {?proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getDate = function() {
  return /** @type{?proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX, 6));
};


/**
 * @param {?proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.DateX|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.hasDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Procedure application = 7;
 * @return {!Array<!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.getApplicationList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure, 7));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.setApplicationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.addApplication = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure.prototype.clearApplicationList = function() {
  return this.setApplicationList([]);
};


/**
 * optional Id id = 1;
 * @return {?proto.google.fhir.r4.core.Id}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getId = function() {
  return /** @type{?proto.google.fhir.r4.core.Id} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Id, 1));
};


/**
 * @param {?proto.google.fhir.r4.core.Id|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Meta meta = 2;
 * @return {?proto.google.fhir.r4.core.Meta}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getMeta = function() {
  return /** @type{?proto.google.fhir.r4.core.Meta} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Meta, 2));
};


/**
 * @param {?proto.google.fhir.r4.core.Meta|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Uri implicit_rules = 3;
 * @return {?proto.google.fhir.r4.core.Uri}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getImplicitRules = function() {
  return /** @type{?proto.google.fhir.r4.core.Uri} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Uri, 3));
};


/**
 * @param {?proto.google.fhir.r4.core.Uri|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setImplicitRules = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearImplicitRules = function() {
  return this.setImplicitRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasImplicitRules = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Code language = 4;
 * @return {?proto.google.fhir.r4.core.Code}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getLanguage = function() {
  return /** @type{?proto.google.fhir.r4.core.Code} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Code, 4));
};


/**
 * @param {?proto.google.fhir.r4.core.Code|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setLanguage = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearLanguage = function() {
  return this.setLanguage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasLanguage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Narrative text = 5;
 * @return {?proto.google.fhir.r4.core.Narrative}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getText = function() {
  return /** @type{?proto.google.fhir.r4.core.Narrative} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Narrative, 5));
};


/**
 * @param {?proto.google.fhir.r4.core.Narrative|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearText = function() {
  return this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated google.protobuf.Any contained = 6;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getContainedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setContainedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addContained = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearContainedList = function() {
  return this.setContainedList([]);
};


/**
 * repeated Extension extension = 8;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 8));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addExtension$ = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated Extension modifier_extension = 9;
 * @return {!Array<!proto.google.fhir.r4.core.Extension>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getModifierExtensionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Extension>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Extension, 9));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Extension>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setModifierExtensionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Extension=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Extension}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addModifierExtension = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.fhir.r4.core.Extension, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearModifierExtensionList = function() {
  return this.setModifierExtensionList([]);
};


/**
 * repeated Identifier identifier = 10;
 * @return {!Array<!proto.google.fhir.r4.core.Identifier>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getIdentifierList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.Identifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.Identifier, 10));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.Identifier>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setIdentifierList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.google.fhir.r4.core.Identifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.Identifier}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addIdentifier = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.google.fhir.r4.core.Identifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearIdentifierList = function() {
  return this.setIdentifierList([]);
};


/**
 * optional Reference subject = 11;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getSubject = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 11));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated CodeableConcept country = 12;
 * @return {!Array<!proto.google.fhir.r4.core.CodeableConcept>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getCountryList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.CodeableConcept>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 12));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.CodeableConcept>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setCountryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.google.fhir.r4.core.CodeableConcept=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addCountry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.google.fhir.r4.core.CodeableConcept, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearCountryList = function() {
  return this.setCountryList([]);
};


/**
 * repeated CodeableConcept jurisdiction = 13;
 * @return {!Array<!proto.google.fhir.r4.core.CodeableConcept>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getJurisdictionList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.CodeableConcept>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 13));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.CodeableConcept>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setJurisdictionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.google.fhir.r4.core.CodeableConcept=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addJurisdiction = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.google.fhir.r4.core.CodeableConcept, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearJurisdictionList = function() {
  return this.setJurisdictionList([]);
};


/**
 * optional CodeableConcept status = 14;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getStatus = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 14));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional DateTime status_date = 15;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getStatusDate = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 15));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setStatusDate = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearStatusDate = function() {
  return this.setStatusDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasStatusDate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional DateTime restore_date = 16;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getRestoreDate = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 16));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setRestoreDate = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearRestoreDate = function() {
  return this.setRestoreDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasRestoreDate = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Period validity_period = 17;
 * @return {?proto.google.fhir.r4.core.Period}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getValidityPeriod = function() {
  return /** @type{?proto.google.fhir.r4.core.Period} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Period, 17));
};


/**
 * @param {?proto.google.fhir.r4.core.Period|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setValidityPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearValidityPeriod = function() {
  return this.setValidityPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasValidityPeriod = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Period data_exclusivity_period = 18;
 * @return {?proto.google.fhir.r4.core.Period}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getDataExclusivityPeriod = function() {
  return /** @type{?proto.google.fhir.r4.core.Period} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Period, 18));
};


/**
 * @param {?proto.google.fhir.r4.core.Period|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setDataExclusivityPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearDataExclusivityPeriod = function() {
  return this.setDataExclusivityPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasDataExclusivityPeriod = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional DateTime date_of_first_authorization = 19;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getDateOfFirstAuthorization = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 19));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setDateOfFirstAuthorization = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearDateOfFirstAuthorization = function() {
  return this.setDateOfFirstAuthorization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasDateOfFirstAuthorization = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional DateTime international_birth_date = 20;
 * @return {?proto.google.fhir.r4.core.DateTime}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getInternationalBirthDate = function() {
  return /** @type{?proto.google.fhir.r4.core.DateTime} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.DateTime, 20));
};


/**
 * @param {?proto.google.fhir.r4.core.DateTime|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setInternationalBirthDate = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearInternationalBirthDate = function() {
  return this.setInternationalBirthDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasInternationalBirthDate = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional CodeableConcept legal_basis = 21;
 * @return {?proto.google.fhir.r4.core.CodeableConcept}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getLegalBasis = function() {
  return /** @type{?proto.google.fhir.r4.core.CodeableConcept} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.CodeableConcept, 21));
};


/**
 * @param {?proto.google.fhir.r4.core.CodeableConcept|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setLegalBasis = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearLegalBasis = function() {
  return this.setLegalBasis(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasLegalBasis = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated JurisdictionalAuthorization jurisdictional_authorization = 22;
 * @return {!Array<!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization>}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getJurisdictionalAuthorizationList = function() {
  return /** @type{!Array<!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization, 22));
};


/**
 * @param {!Array<!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization>} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setJurisdictionalAuthorizationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.addJurisdictionalAuthorization = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.google.fhir.r4.core.MedicinalProductAuthorization.JurisdictionalAuthorization, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearJurisdictionalAuthorizationList = function() {
  return this.setJurisdictionalAuthorizationList([]);
};


/**
 * optional Reference holder = 23;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getHolder = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 23));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setHolder = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearHolder = function() {
  return this.setHolder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasHolder = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Reference regulator = 24;
 * @return {?proto.google.fhir.r4.core.Reference}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getRegulator = function() {
  return /** @type{?proto.google.fhir.r4.core.Reference} */ (
    jspb.Message.getWrapperField(this, proto_r4_core_datatypes_pb.Reference, 24));
};


/**
 * @param {?proto.google.fhir.r4.core.Reference|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setRegulator = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearRegulator = function() {
  return this.setRegulator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasRegulator = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional Procedure procedure = 25;
 * @return {?proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.getProcedure = function() {
  return /** @type{?proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure} */ (
    jspb.Message.getWrapperField(this, proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure, 25));
};


/**
 * @param {?proto.google.fhir.r4.core.MedicinalProductAuthorization.Procedure|undefined} value
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
*/
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.setProcedure = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.fhir.r4.core.MedicinalProductAuthorization} returns this
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.clearProcedure = function() {
  return this.setProcedure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.fhir.r4.core.MedicinalProductAuthorization.prototype.hasProcedure = function() {
  return jspb.Message.getField(this, 25) != null;
};


goog.object.extend(exports, proto.google.fhir.r4.core);
